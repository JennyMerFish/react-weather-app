{"version":3,"sources":["App.js","index.js"],"names":["App","useState","cityToSearch","setCityToSearch","weather","setWeather","URL","fixed","main","temp","toFixed","className","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","type","placeholder","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAgDeA,MA3Cf,WAAgB,IAAD,IACb,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGMC,EAAM,qDAAuDJ,EAAe,yDAQ9EK,EAAK,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAASI,YAAZ,aAAG,EAAeC,KAAKC,QAAQ,GAexC,OACE,qBAAKC,UAAU,QAAf,SACE,iCACE,qBAAKA,UAAU,aAAf,SACI,uBAAOC,SAAU,SAACC,GAAD,OAAOV,EAAgBU,EAAEC,OAAOC,QAAQA,MAAOb,EAAcc,WA1BzE,SAAAC,GACG,UAAZA,EAAIC,KACJC,MAAMb,GACLc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAWpB,EAAgB,IAAKE,EAAWkB,OAsBqDC,KAAK,OAAOC,YAAY,SAASd,UAAU,iBAGpJ,8BACCP,EAAU,gCAAK,oBAAIO,UAAU,OAAd,gBAAsBP,QAAtB,IAAsBA,OAAtB,EAAsBA,EAASsB,OAAU,qBAAIf,UAAU,OAAd,UAAsBJ,EAAtB,WAA9C,IAAsF,oBAAII,UAAU,cAAd,gBAA6BP,QAA7B,IAA6BA,GAA7B,UAA6BA,EAASA,QAAQ,UAA9C,aAA6B,EAAqBI,UAAmB,qECnC3KmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0c05a18d.chunk.js","sourcesContent":["import \"./app.css\"\nimport React, { useState } from \"react\";\n\n\n\nfunction App() {\n  const [cityToSearch, setCityToSearch] = useState(\"\")\n  const [weather, setWeather] = useState(false)\n  \n  \n  const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityToSearch + \"&units=imperial&appid=750ea5847bbdbf22dec14f20d97e9f2e\"\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n        fetch(URL)\n        .then(res => res.json())\n        .then(result => {setCityToSearch(\"\"); setWeather(result)})\n    }\n}\nconst fixed = weather?.main?.temp.toFixed(0)\n\n\n// const background = () => {\n//   if (weather?.weather[0]?.main === undefined) {\n//     return \"app\"\n//   }\n//   else if (weather?.weather[0]?.main === \"Cloudy\") {\n//     return \"cloudy\"\n//   }\n//   else if (weather?.weather[0]?.main === \"Sunny\") {\n//     return \"sunny\"\n//   }\n// }\n\n  return (\n    <div className=\"sunny\">\n      <main>\n        <div className=\"search-box\">\n            <input onChange={(e) => setCityToSearch(e.target.value)} value={cityToSearch} onKeyPress={search} type=\"text\" placeholder=\"Search\" className=\"search-bar\"/>\n            {/* <button onClick={() => getWeatherData()}>Search</button> */}\n        </div>\n     <div>\n     {weather ? <div><h1 className=\"city\">{weather?.name}</h1><h1 className=\"temp\">{fixed}&deg;F</h1> <h1 className=\"description\">{weather?.weather[0]?.main}</h1></div> : <h1>Enter city name for weather</h1>}\n     </div>\n     </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}